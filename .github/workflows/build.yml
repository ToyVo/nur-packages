name: "Build and populate cache"
on:
  pull_request:
  push:
    branches:
      - main
  schedule:
    # rebuild everyday at 7:30
    # TIP: Choose a random time here so not all repositories are build at once:
    # https://www.random.org/clock-times/?num=1&earliest=01%3A00&latest=08%3A00&interval=5&format=html&rnd=new
    - cron:  '30 7 * * *'
  workflow_dispatch:
permissions:
  contents: write
  issues: write
  pull-requests: write
jobs:
  tests:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
    - name: Install nix
      uses: DeterminateSystems/determinate-nix-action@main
    - name: Update flake.lock
      uses: DeterminateSystems/update-flake-lock@main
      id: update-flake-lock
      with:
        pr-title: "Update Nix flake inputs"
        pr-labels: |
          dependencies
          automated
    - name: Show nixpkgs version
      run: nix-instantiate --eval -E '(builtins.getFlake (builtins.toString ./.)).inputs.nixpkgs.lib.version'
    - name: Check evaluation
      run: nix flake show --option allow-import-from-derivation true
    - name: Build nix packages
      run: nix run nixpkgs#nix-fast-build -- --skip-cached --no-nom --flake ".#checks.$(nix eval --raw --impure --expr builtins.currentSystem)" --cachix-cache toyvo --option accept-flake-config true
      env:
        CACHIX_AUTH_TOKEN: ${{ secrets.CACHIX_AUTH_TOKEN }}
    - name: Trigger NUR update
      run: curl -XPOST "https://nur-update.nix-community.org/update?repo=https://github.com/ToyVo/nur-packages"
    - name: Merge flake.lock
      run: "gh pr merge --auto --squash ${{ steps.update-flake-lock.outputs.pull-request-number }}"
      env:
        GH_TOKEN: ${{ github.token }}
